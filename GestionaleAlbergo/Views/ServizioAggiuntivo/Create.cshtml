@model GestionaleAlbergo.Models.ServizioAggiuntivoPrenotazione

@{
    ViewBag.Title = "Create";
    var prenotazioneId = ViewBag.PrenotazioneId;
    var serviziDisponibili = GestionaleAlbergo.Models.Utility.GetServiziAggiuntivi();
    var selectListServizi = new SelectList(serviziDisponibili, "Id", "NomeCompleto");

    if (TempData["msgErrore"] != null)
    {
        ViewBag.msgErrore = TempData["msgErrore"];
    }
    if (TempData["msgSuccess"] != null)
    {
        ViewBag.msgSuccess = TempData["msgSuccess"];
    }

}

<h1>Aggiungi servizio aggiuntivo a prenotazione</h1>

@if (ViewBag.msgErrore != null)
{
    <div class="alert alert-danger fw-bold text-danger my-3" role="alert">
        @ViewBag.msgErrore
    </div>
}
@if (ViewBag.msgSuccess != null)
{
    <div class="alert alert-success fw-bold text-success my-3" role="alert">
        @ViewBag.msgSuccess
    </div>
}

@Html.ActionLink("Torna a elenco", "Index", new { id = prenotazioneId }, new { @class = "btn btn-outline-primary" })

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ServizioAggiuntivoPrenotazione</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.ServizioAggiuntivoID,
           "Servizio Aggiuntivo",
           htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.ServizioAggiuntivoID,
                   selectListServizi,
                   "Scegli il servizio aggiuntivo",
                   new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.ServizioAggiuntivoID,
               "",
               new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Data,
           htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Data,
               new { htmlAttributes = new { @class = "form-control", Value = DateTime.Now.Date } })
                @Html.ValidationMessageFor(model => model.Data,
               "",
               new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantita, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantita, new { htmlAttributes = new { @class = "form-control", Value = 1 } })
                @Html.ValidationMessageFor(model => model.Quantita, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}


